send mul a b {multiply(a, b)};
send minus a b {minus(a, b)};
send lt a b {lessthan(a, b)};

// a lonely literal is coerced into an anonymous place holding
// that literal

def fact (p) {
	pred p(lt x 1)(x)
	place tmp(), 
	
	fac > p > tmp > [] > fac
	tmp > mul <> 1 > add !<< p		
    add > return
}

def insertion_sort (s, n) {
	



insertion_sort(item s[], int n)
{
int i,j;
/* counters */
	for (i=1; i<n; i++) {
		j=i;
		while ((j>0) && (s[j] < s[j-1])) {
			swap(&s[j],&s[j-1]);
			j = j-1;
		}
	}
}
